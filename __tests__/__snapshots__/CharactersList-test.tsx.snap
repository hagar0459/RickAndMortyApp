// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing CharactersList Link renders correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "height": 60,
        "width": "100%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="search..."
      rejectResponderTermination={true}
      style={
        Object {
          "backgroundColor": "#dcdcdc",
          "borderRadius": 10,
          "flex": 1,
          "fontSize": 18,
          "marginBottom": 10,
          "marginHorizontal": "5%",
          "marginTop": 10,
          "paddingHorizontal": 10,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    contentContainerStyle={
      Object {
        "backgroundColor": "#fafafa",
        "marginHorizontal": 8,
        "paddingVertical": 8,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="never"
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#fafafa",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
           
          No Characters Found !!!
        </Text>
      </View>
      <View
        onLayout={[Function]}
      />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;

exports[`Testing CharactersList Snapshot Test 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
>
  <View
    style={
      Object {
        "backgroundColor": "white",
        "height": 60,
        "width": "100%",
      }
    }
  >
    <TextInput
      allowFontScaling={true}
      autoCorrect={false}
      onChangeText={[Function]}
      placeholder="search..."
      rejectResponderTermination={true}
      style={
        Object {
          "backgroundColor": "#dcdcdc",
          "borderRadius": 10,
          "flex": 1,
          "fontSize": 18,
          "marginBottom": 10,
          "marginHorizontal": "5%",
          "marginTop": 10,
          "paddingHorizontal": 10,
          "width": "90%",
        }
      }
      underlineColorAndroid="transparent"
      value=""
    />
  </View>
  <RCTScrollView
    ListEmptyComponent={[Function]}
    ListFooterComponent={[Function]}
    contentContainerStyle={
      Object {
        "backgroundColor": "#fafafa",
        "marginHorizontal": 8,
        "paddingVertical": 8,
      }
    }
    data={Array []}
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="never"
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReached={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    style={
      Object {
        "backgroundColor": "#fafafa",
      }
    }
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
            "justifyContent": "center",
            "width": "100%",
          }
        }
      >
        <Text
          style={
            Object {
              "textAlign": "center",
            }
          }
        >
           
          No Characters Found !!!
        </Text>
      </View>
      <View
        onLayout={[Function]}
      />
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
